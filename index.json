[{"body":"","link":"https://docs.entroware.com/","section":"","tags":null,"title":""},{"body":"","link":"https://docs.entroware.com/tags/ai/","section":"tags","tags":null,"title":"Ai"},{"body":"","link":"https://docs.entroware.com/tags/chat/","section":"tags","tags":null,"title":"Chat"},{"body":"","link":"https://docs.entroware.com/tags/deepseek/","section":"tags","tags":null,"title":"Deepseek"},{"body":"","link":"https://docs.entroware.com/tags/gpt/","section":"tags","tags":null,"title":"GPT"},{"body":"","link":"https://docs.entroware.com/tags/gpt4all/","section":"tags","tags":null,"title":"Gpt4all"},{"body":"","link":"https://docs.entroware.com/tags/gui/","section":"tags","tags":null,"title":"Gui"},{"body":"","link":"https://docs.entroware.com/tags/index/","section":"tags","tags":null,"title":"Index"},{"body":"Introduction to GPT4ALL GPT4ALL is a useful tool developed by Nomic AI, for running and interfacing with LLMs (Large Language Models) without relying on cloud-based services, offering significant advantages in terms of privacy, data security, and offline functionality.\nUnlike cloud-based AI services, GPT4ALL allows for processing on your Entroware hardware, ensuring that your sensitive information never leaves your computer.\nGPT4ALL supports a variety of models with different capabilities, sizes, and performance characteristics, allowing you to choose the right balance for your specific hardware configuration and use case.\nIn this article we will explain how to install GPT4ALL on your Ubuntu computer and explore how to select and use a language model (in this case DeepSeek R1) to solve a Python coding problem.\nInstalling GPT4ALL Follow these steps to install GPT4ALL on your Ubuntu system:\nFirst, open a terminal (Ctrl+Alt+T) and download the GPT4ALL installer for Linux. 1wget https://gpt4all.io/installers/gpt4all-installer-linux.run Give the installer executable permissions. 1chmod +x gpt4all-installer-linux.run Start the installer. 1./gpt4all-installer-linux.run You will then be asked to specify an installation directory for GPT4ALL. We would recommend leaving this as the default, however if you choose a custom location, make note of it for later on and click Next to continue. The installable components will be displayed, as well as the required disk space (in this case 1.89 GB). If you are happy with this click Next to proceed. Carefully read Nomic's Licence Agreement. Once you understand and accept the terms, proceed to the next step. Finally you can click Install to begin the installation process. This may take several minutes depending on your internet connection and system performance. Using GPT4ALL Setting up GPT4ALL to use DeepSeek R1 You can now launch GPT4ALL using the the directory we specified during the install process. 1./gpt4all/bin/chat When GPT4ALL loads for the first time, you'll see a welcome screen asking if you want to opt in to analytics to help Nomic make improvements. If you do not wish to do this just select No for both options in the bottom right. Click on the Models tab in the left sidebar to view currently installed models. Initially, this list may contain only a basic model. In this example we will be installing the DeepSeek R1 model, so to do this click on Add Model in the top right. Scroll down to find the DeepSeek R1 model and click Download. This will then be downloaded and made available on your system. Start Chatting Now that we have the new model installed we can click on Chats in the left side menu. At the top you can select the DeepSeek R1 model to interact with. You can now begin interacting with the model. Type your questions or requests in the input field at the bottom of the screen. In this example we will ask it how to fix a mistake in a python function. Conclusion Congratulations! You should now be up and running and ready to experiment with GPT4ALL and a language model of your choosing, all running locally on your Entroware hardware. You should also have the knowledge to set up and use different models, including DeepSeek R1, and apply them to a problem. Feel free to experiment with different models, prompts, and phrasing to yield different results, which may be more suitable for your use case.\n","link":"https://docs.entroware.com/posts/linux-gpt4all-gui/","section":"posts","tags":["gpt4all","llm","ubuntu","gui","ai","linux","openai","chat","GPT","deepseek","local-ai"],"title":"Install GPT4ALL on Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/linux/","section":"tags","tags":null,"title":"Linux"},{"body":"","link":"https://docs.entroware.com/tags/llm/","section":"tags","tags":null,"title":"Llm"},{"body":"","link":"https://docs.entroware.com/tags/local-ai/","section":"tags","tags":null,"title":"Local-Ai"},{"body":"","link":"https://docs.entroware.com/tags/openai/","section":"tags","tags":null,"title":"Openai"},{"body":"","link":"https://docs.entroware.com/posts/","section":"posts","tags":["index"],"title":"Posts"},{"body":"","link":"https://docs.entroware.com/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://docs.entroware.com/tags/ubuntu/","section":"tags","tags":null,"title":"Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/best-practices/","section":"tags","tags":null,"title":"Best Practices"},{"body":"Introduction Filing a support ticket is the most effective way to get support for your product. However some computer issues can seem overwhelming, unique and vague in cause, meaning getting to the root cause of the issue can take time. The primary bottleneck in the support process is acquiring enough detail for a diagnosis. This guide will walk you through how to provide actionable information to your support agent by narrowing down areas of concern and eliminating external factors, expediting a solution.\nRoot Cause Analysis Before filing a support ticket, it is worth doing root cause analysis to determine key details about the issue and potentially resolve them prior to a ticket being filed. If the issue cannot be resolved by yourself, key details can be used to better inform support about the issue. Some key questions to ask are:\nWere any actions taken prior to the issue arising? For example;\nInstalled new package Changed configuration Ran a command Change in external equipment (cable, router, monitor, dock, etc) If the change can be reverted, does the issue go away when the change is reverted?\nEliminate external factors\nNetwork issues: test another network or network cable Display issues: test another monitor or monitor cable Power issues: test another power cable or power adapter Is information already available for your issue? For example;\n\u0026quot;I am trying to run [application] and it is not working\u0026quot; Does the application support Linux? Check the vendor's website. \u0026quot;I am trying to charge over Type C and it is not working\u0026quot; Does your computer support Type C charging? Check the product description. \u0026quot;I am looking for a spare power adaptor/ battery for my computer\u0026quot; Searching for \u0026quot;spares\u0026quot; on entroware.com will show our spares page. Submitting A Support Ticket Provide Accurate Information Upon completing an order, you will have received an email with the subject \u0026quot;Entroware - Order [number]\u0026quot; where [number] is your order ID (this is also at the top of the physical invoice shipped with your machine in the documents pouch).\nProviding an accurate order ID will allow us to look up your computer model and revision, as well as the upgrade options so that we can get a better picture of the hardware you are working with. For example, whether your machine: is a laptop, has a discrete GPU, Type-C functionality, the network card model, processor, sound card, etc.\nBe Descriptive Being descriptive in the initial ticket will reduce the number of messages required to determine the nature of the issue and therefore the overall time to a resolution. Some example questions to narrow down the nature of the issue are:\nComputer wont boot? What can you see? Does the power LED come on? Does this change when it is plugged in? What is on screen? (boot splash (logo), white text, flashing underscore, blank) Networking issues? What is the nature of the issue? Is connectivity completely lost, intermittent or slow? Is the issue present on the wired or wireless connection, or both? Does the issue affect all services and traffic? (Web browsing, gaming, SSH) Avoid... Instead, try... My laptop won't turn on When I press the power button, the power LED turns green, but the screen stays black. I have tried an external monitor and nothing is displayed on it. I am having network issues The WiFi on my laptop occasionally drops out. Wired networking works fine and I have tried different WiFi networks, with the same result. My screen is flickering I have recently reinstalled the OS and installed a graphics driver from [source] and now some individual windows flicker. I am unsure how to revert this. Conclusion This guide should provide you with the best ways to save time when seeking support, by determining the details of the issue you are experiencing to provide a better diagnostic picture earlier in the support process, so we can you get back up and running as quickly as possible.\n","link":"https://docs.entroware.com/posts/filing-support-ticket/","section":"posts","tags":["Support","Ticket","Best Practices","Troubleshooting"],"title":"Filing An Effective Support Ticket"},{"body":"","link":"https://docs.entroware.com/tags/support/","section":"tags","tags":null,"title":"Support"},{"body":"","link":"https://docs.entroware.com/tags/ticket/","section":"tags","tags":null,"title":"Ticket"},{"body":"","link":"https://docs.entroware.com/tags/troubleshooting/","section":"tags","tags":null,"title":"Troubleshooting"},{"body":"","link":"https://docs.entroware.com/tags/battery/","section":"tags","tags":null,"title":"Battery"},{"body":"Introduction Lithium Polymer (LiPo) batteries have a natural lifespan due to electrolyte decomposition over time. This guide will help you to identify the causes of early battery degradation and how best to avoid them, as well as the warning signs, so you can get the most out of your mobile computer.\nIf your battery is inflated, cease using the computer and contact support. Causes Of Early Battery Degradation Suboptimal charge cycles Batteries maintained at a high charge state will lose capacity faster. You can help prevent this accelerated process by not leaving your device connected to AC power at full charge for extended periods, in essence leave the battery at 100% as little as possible. Rather, try to ensure the device is regularly discharged below 50% before charging again.\nOnly use approved power supplies Using power supplies that are not properly rated for your computer can lead to damage and severe battery degradation, which may include the battery inflating. Always match the voltage and amperage denoted on the bottom of your machine, taking care the match the connector type. Only use reputable brands from reputable sources. Contact Entroware support for approved power adapters.\nEnvironment External sources of heat or insulation will cause the battery to operate at temperatures outside of expected parameters, accelerating electrolyte decomposition. Avoid placing your computer on hot surfaces or using it on insulating/airflow hindering surfaces, such as blankets. Place your computer onto a flat rigid surface (such as a desk) so that the computer can properly manage airflow and cooling. This will have the added benefit of keeping other components cool, mitigating thermal throttling and improving overall performance.\nUnderstanding Changes In Battery Usage It is important to delineate battery capacity and battery usage when diagnosing reduced battery life. To do this, you need to determine any changes in usage that may have led to increased discharge, such as:\nIncreased screen brightness/ disabling screen timer Increased keyboard backlight brightness/ disabling backlight timer Increased use of Bluetooth and wireless networking High power consumption from peripherals Increased activity from background processes Suspending the machine instead of shutting it down Storage If you need to store your device for a long period of time, it’s best to reduce the charge level to 40%-80% before storing and to regularly check the battery to ensure it has not drained to very low levels. Ensure the storage environment has regulated temperature and humidity.\nConclusion Adopting best practices will delay the onset of battery degradation, however with age it becomes unavoidable. Battery degradation can be coupled with the battery inflating. If you believe that you battery is degrading within warranty, contact support. If you believe that your battery is inflating, cease using the computer immediately and contact support. If you are experiencing battery issues outside of warranty, contact support for recommended steps that can be tailored to your situation.\n","link":"https://docs.entroware.com/posts/battery-best-practices/","section":"posts","tags":["Battery","Life","Best Practices","LiPo"],"title":"Battery Best Practices"},{"body":"","link":"https://docs.entroware.com/tags/life/","section":"tags","tags":null,"title":"Life"},{"body":"","link":"https://docs.entroware.com/tags/lipo/","section":"tags","tags":null,"title":"LiPo"},{"body":"","link":"https://docs.entroware.com/tags/configure/","section":"tags","tags":null,"title":"Configure"},{"body":"Introduction The Docker container platform is a great way to deploy and install software while maintaining a consistent user and developer experience. If you would like to learn how to set up Docker on your Ubuntu system, follow this guide: Install Docker on Ubuntu. However some docker images may be more suited to graphics acceleration, which requires some configuration to utilise. This guide will show you how to set up the NVIDIA Container Toolkit, so that your Docker containers can take advantage of the host NVIDIA hardware, perfect for applications such as TensorFlow to turbocharge your AI/ML models.\nRequirements Before you continue, please ensure you have the following:\nA computer with an NVIDIA graphics card/ chip Ubuntu 22.04 LTS installed NVIDIA graphics drivers installed (NVIDIA drivers are pre-installed on Entroware NVIDIA systems and do not need to be reinstalled) Docker installed (Install Docker on Ubuntu) Install the NVIDIA Container Toolkit package Ensure the curl command is installed with\n1user@machine:~$ sudo apt install curl Add the NVIDIA Container Toolkit GPG keys and add the repository\n1user@machine:~$ curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ 2 \u0026amp;\u0026amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ 3 sed \u0026#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g\u0026#39; | \\ 4 sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list 1user@machine:~$ sudo sed -i -e \u0026#39;/experimental/ s/^#//g\u0026#39; /etc/apt/sources.list.d/nvidia-container-toolkit.list Update the apt package list\n1user@machine:~$ sudo apt-get update Install the NVIDIA Container Toolkit package\n1user@machine:~$ sudo apt-get install -y nvidia-container-toolkit Configure the Container Toolkit and Docker 1user@machine:~$ sudo nvidia-ctk runtime configure --runtime=docker 1user@machine:~$ sudo systemctl restart docker 1user@machine:~$ nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json 1user@machine:~$ sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place Test Docker GPU detection nvidia-smi The following test will use an Ubuntu Docker container to run the nvidia-smi command, which will determine whether an NVIDIA GPU is being detected within the container.\n1user@machine:~$ docker run --rm --runtime=nvidia --gpus all \\ 2 --device=/dev/nvidia-uvm \\ 3 --device=/dev/nvidia-uvm-tools \\ 4 --device=/dev/nvidia-modeset \\ 5 --device=/dev/nvidiactl \\ 6 --device=/dev/nvidia0 \\ 7 ubuntu nvidia-smi If a graphics card has been successfully detected, the output should display a table, showing the model of the GPU detected, plus a table showing the processes that are currently being accelerated by the GPU (if applicable).\nTensorFlow The next test will use tensorflow:latest-gpu Docker container to test for GPU detection\n1user@machine:~$ docker run --rm --runtime=nvidia --gpus all \\ 2 --device=/dev/nvidia-uvm \\ 3 --device=/dev/nvidia-uvm-tools \\ 4 --device=/dev/nvidia-modeset \\ 5 --device=/dev/nvidiactl \\ 6 --device=/dev/nvidia0 \\ 7 tensorflow/tensorflow:latest-gpu \\ 8 python3 -c \u0026#34;import tensorflow as tf; print(tf.config.list_physical_devices(\u0026#39;GPU\u0026#39;))\u0026#34; Successful GPU detection output should look similar to\n1[PhysicalDevice(name=\u0026#39;/physical_device:GPU:0\u0026#39;, device_type=\u0026#39;GPU\u0026#39;)] Unsuccessful GPU detection output will look like\n1CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected Conclusion You should now be able to run Docker containers with GPU acceleration to maximise the resources available to your applications. Whether you need to accelerate video transcoding, AI/ML models or other GPU based workloads, you can now reap the benefits as both a user and a developer.\n","link":"https://docs.entroware.com/posts/configure-docker-nvidia/","section":"posts","tags":["Linux","Docker","Ubuntu","NVIDIA","container","toolkit"],"title":"Configure docker for NVIDIA acceleration"},{"body":"","link":"https://docs.entroware.com/tags/container/","section":"tags","tags":null,"title":"Container"},{"body":"","link":"https://docs.entroware.com/tags/docker/","section":"tags","tags":null,"title":"Docker"},{"body":"","link":"https://docs.entroware.com/tags/install/","section":"tags","tags":null,"title":"Install"},{"body":"Introduction TensorFlow is a versatile platform for developing and deploying Machine Learning models. This guide will walk you through installing and setting up TensorFlow on your Ubuntu system and configure it for NVIDIA acceleration. For this you will need:\nComputer with NVIDIA graphics Ubuntu 22.04 installed NVIDIA graphics drivers installed (these are already pre-installed on Entroware NVIDIA systems and do not need to be reinstalled) Installing the CUDA toolkit Running the commands below will install the CUDA toolkit. The most up-to-date commands can be found at https://developer.nvidia.com/cuda-downloads\nFetching and installing the CUDA toolkit Fetch and add the apt pin file\n1user@machine:~$ wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin 1user@machine:~$ sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600 Download and install the CUDA repository package and add the keys\n1user@machine:~$ wget https://developer.download.nvidia.com/compute/cuda/12.4.1/local_installers/cuda-repo-ubuntu2204-12-4-local_12.4.1-550.54.15-1_amd64.deb 1user@machine:~$ sudo dpkg -i cuda-repo-ubuntu2204-12-4-local_12.4.1-550.54.15-1_amd64.deb 1user@machine:~$ sudo cp /var/cuda-repo-ubuntu2204-12-4-local/cuda-*-keyring.gpg /usr/share/keyrings/ Update the apt package list\n1user@machine:~$ sudo apt-get update Install the CUDA Toolkit package\n1user@machine:~$ sudo apt-get -y install cuda-toolkit-12-4 Export variables for the CUDA toolkit 1user@machine:~$ CUDA_VER=$(ls /usr/local/ | grep cuda | tail -n1) 1user@machine:~$ echo \u0026#34;export PATH=\\$PATH:/usr/local/${CUDA_VER}/bin\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 1user@machine:~$ echo \u0026#34;export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:/usr/local/${CUDA_VER}/lib64\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 1user@machine:~$ source ~/.bashrc Installing and testing TensorFlow Installing Python3 and the TensorFlow framework 1user@machine:~$ sudo apt-get install python3-venv 1user@machine:~$ python3 -m venv venv 1user@machine:~$ source venv/bin/activate 1user@machine:~$ pip install tensorflow[and-cuda] 1user@machine:~$ export CUDNN_PATH=$(dirname $(python -c \u0026#34;import nvidia.cudnn; print(nvidia.cudnn.__file__)\u0026#34;)) 1user@machine:~$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CUDNN_PATH}/lib Testing GPU detection You can now use TensorFlow to test whether your NVIDIA GPU is being detected properly\n1user@machine:~$ python3 -c \u0026#34;import tensorflow as tf; 2print(tf.config.list_physical_devices(\u0026#39;GPU\u0026#39;))\u0026#34; If the GPU is being detected correctly, the output should look similar to the following:\n1[PhysicalDevice(name=\u0026#39;/physical_device:GPU:0\u0026#39;, device_type=\u0026#39;GPU\u0026#39;)] If the GPU is not being detected correctly, the output will be similar to:\n1Skipping registering GPU devices... Conclusion You should now have a functioning install of the TensorFlow framework, complete with CUDA acceleration to turbocharge your Machine Learning models. More information, guides, and tools can be found on the TensorFlow website: https://www.tensorflow.org\n","link":"https://docs.entroware.com/posts/install-tensorflow-nvidia/","section":"posts","tags":["Linux","TensorFlow","Ubuntu","Install","Configure","NVIDIA","Machine Learning"],"title":"Install Tensorflow on Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/machine-learning/","section":"tags","tags":null,"title":"Machine Learning"},{"body":"","link":"https://docs.entroware.com/tags/nvidia/","section":"tags","tags":null,"title":"NVIDIA"},{"body":"","link":"https://docs.entroware.com/tags/tensorflow/","section":"tags","tags":null,"title":"TensorFlow"},{"body":"","link":"https://docs.entroware.com/tags/toolkit/","section":"tags","tags":null,"title":"Toolkit"},{"body":"Introduction Docker is a container platform designed to make running and setting up applications an easy and consistent experience, regardless of which environment you are using. Docker features a rich ecosystem of container images, which are all ready for you to install and use.\nInstall Docker Firstly, ensure the curl package is installed with\n1user@machine:~$ sudo apt install curl Add Docker keys and repository Add Docker's official GPG keys for Ubuntu\n1user@machine:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg Then add the Docker repository\n1user@machine:~$ echo \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list Update your package list\n1user@machine:~$ sudo apt update Install the Docker package Install the Docker package\n1user@machine:~$ sudo apt install docker-ce Add user to group Add your user to the docker group. This will prevent the need for root privileges each time you launch a docker container.\n1user@machine:~$ sudo usermod -aG docker ${USER} Log out and back in for the new user groups to apply.\nConclusion You have now successfully installed Docker on Ubuntu and can explore the vast Docker ecosystem. If your Docker computer has NVIDIA graphics, remember to set up the NVIDIA container toolkit with our guide: Configure docker for NVIDIA acceleration\n","link":"https://docs.entroware.com/posts/install-docker-ubuntu/","section":"posts","tags":["Linux","Docker","Ubuntu","Install"],"title":"Install Docker on Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/bootable/","section":"tags","tags":null,"title":"Bootable"},{"body":"Introduction to Memtest86 Memtest86 is a tool used to diagnose issues with memory (RAM). It is not a part of the operating system and must be booted into to perform a test. Testing memory is a very important diagnostic step when the user is experiencing errant behaviour from their computer, because memory failures can manifest in completely erratic and unpredictable ways which may make other tests impossible. This guide will teach you how to create a bootable Memtest86 USB drive and use it to test your computer's memory.\nGetting Started To create a Memtest86 bootable USB drive, you will need:\nUSB Drive: Minimum 2GB capacity recommended Memtest86 Image: Downloaded from the memtest86 website To download the image, go to www.memtest86.com/download.htm\nUEFI systems: Download Memtest86 Free from the top of the page. Legacy systems: Scroll down to Older Versions, under the V4 Linux/Mac Downloads heading, download the Image for creating bootable USB Drive. Extract Memtest86 USB disk image Open the newly downloaded memtest86-usb.zip zip file and extract the memtest86-usb.img file from the archive. This file will be used in the next step.\nCreating a bootable Memtest86 USB drive Open the Disks application and select your USB drive from the side menu. Click on the three dots once again and select Restore Disk Image... Under Image to Restore, choose the extracted 'memstest86-usb.img' from earlier and click Start Restoring... Click Restore on the next window to finish imaging the drive.\nFinally, shut down your system to proceed to the next stage.\nUsing Memtest86 Ensure AC is connected, power machine on and press your boot key (F7 on Entroware laptops, F8 or F12 on Entroware desktops). From the boot menu, select the removable drive and press enter. Once memtest86 has loaded, select 'Config' To begin testing your system's memory, select the 'Start Test' option on the left. Memtest86 will now thoroughly test the memory installed in your computer. This may take many hours to complete depending on many variables, but will provide crucial insight into the condition of your memory modules. Once the test has been completed, you will be prompted to press any key to view the results. Memtest86 will then display the number of errors that have been found (if any). You will also be asked if you wish to save a report to a file on the USB drive, select 'y'. Conclusion This article has guided you through the creation and use of a memtest86 usb drive to test the memory modules in your computer. If you find memory errors and are within warranty or have an SLA, contact us for memory replacement options. If you are self-servicing, have suitable experience and have taken the proper precautions, ensure the failing memory module(s) have been properly identified in multi module setups by rerunning the test with each module removed.\n","link":"https://docs.entroware.com/posts/memtest86/","section":"posts","tags":["memtest","memtest86","bootable","USB","Linux","Ubuntu"],"title":"Create and use a Memtest86 USB Drive in Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/memtest/","section":"tags","tags":null,"title":"Memtest"},{"body":"","link":"https://docs.entroware.com/tags/memtest86/","section":"tags","tags":null,"title":"Memtest86"},{"body":"","link":"https://docs.entroware.com/tags/usb/","section":"tags","tags":null,"title":"USB"},{"body":"","link":"https://docs.entroware.com/tags/gaming/","section":"tags","tags":null,"title":"Gaming"},{"body":"Introduction to Steam ﻿Steam is a game distribution platform developed by Valve. It provides users with easy game installation, automatic updating, as well as cloud storage for game saves. There are also community features such as friends, groups, and news.\nInstall Option 1 - Installing Steam using the App Center Open the preinstalled Ubuntu Software application and search for steam. Then click on the menu item titled Steam with the Steam logo to the left similar to the image below.\nThen click the Install button on the Steam application page. The correct page should also display Canonical with its verified badge as its publisher.\nInstall Option 2 - Installing Steam using a terminal Open a terminal and enter the following command\n1user@machine:~$ sudo snap install steam The steam application is now installed.\nLaunch Steam Now you're ready to launch Steam and log in. On first launch you will see window similar to the image below for a few moments while Steam downloads its remaining files and gets set up.\nAfter that has completed you will then be able to login and play your favourite Linux compatible games.\n","link":"https://docs.entroware.com/posts/install-steam-ubuntu/","section":"posts","tags":["Steam","Gaming","Ubuntu"],"title":"Install Steam on Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/steam/","section":"tags","tags":null,"title":"Steam"},{"body":"","link":"https://docs.entroware.com/tags/apt/","section":"tags","tags":null,"title":"Apt"},{"body":"","link":"https://docs.entroware.com/tags/authentication/","section":"tags","tags":null,"title":"Authentication"},{"body":"","link":"https://docs.entroware.com/tags/automation/","section":"tags","tags":null,"title":"Automation"},{"body":"","link":"https://docs.entroware.com/tags/bash/","section":"tags","tags":null,"title":"Bash"},{"body":"Introduction to Bash Programming Bash (Bourne Again SHell) is a popular command-line shell and scripting language used primarily in Unix-like operating systems such as Linux, FreeBSD, and macOS. It provides a powerful interface for interacting with the operating system, automating tasks, and writing scripts to streamline workflows.\nGetting Started To begin writing Bash scripts, all you need is a text editor and a basic understanding of the command-line. Bash scripts can either be executed directly from the command-line or from a dedicated file that typically use a .sh file extension.\nWriting Your First Script Let's create a simple Bash script that prints \u0026quot;Hello, World!\u0026quot; to the terminal.\n1#!/usr/bin/env bash 2 3# This is a comment 4echo \u0026#34;Hello, World!\u0026#34; In this example the first line contains #!/usr/bin/env bash which is an important line that specifies the interpreter to be used for executing this script.\nThe next line starts with a hash symbol (#), this is a code comment and the bash interpreter knows to ignore this and not execute it. ﻿A code comment is typically a line of text that provides an explanation about what the code.\nThe final line starts with the command echo which prints the text that you provide it to the screen.\nSave this script to a file named hello.sh, make it executable using chmod +x hello.sh, and then execute it by running ./hello.sh in the terminal.\nVariables Variables in Bash and can hold strings, integers, or arrays. Here's how you declare and use variables:\n1#!/usr/bin/env bash 2 3# Define a variable 4name=\u0026#34;John\u0026#34; 5 6# Access the variable 7echo \u0026#34;Hello, $name!\u0026#34; Conditional Statements Bash supports conditional statements for decision-making in scripts for this the if, elif, and else keywords are used. Here's an example where we check if the age specified in the age variable is greater than or equal to 18:\n1#!/usr/bin/env bash 2 3age=25 4 5if [ $age -ge 18 ]; then 6 echo \u0026#34;You are an adult.\u0026#34; 7else 8 echo \u0026#34;You are a minor.\u0026#34; 9fi Loops Loops allow you to iterate over lists of items and perform repetitive tasks. Bash supports for loops and while loops.\nHere's an example of a for loop that will execute for each value provided. It starts with the initial value \u0026quot;apple\u0026quot; assigned to the variable fruit, then echo \u0026quot;I like $fruit\u0026quot; is then executed, which prints \u0026quot;I like apple\u0026quot;. Then it moves on to the next item in the list (banana), assigns its value to the fruit variable, and executes the same command again: echo \u0026quot;I like $fruit\u0026quot;, printing \u0026quot;I like banana\u0026quot;. It continues this process with the last fruit in the list, orange, finally resulting in the message \u0026quot;I like orange\u0026quot; being printed.\n1#!/usr/bin/env bash 2 3# Iterate over a list 4for fruit in apple banana orange; do 5 echo \u0026#34;I like $fruit\u0026#34; 6done Functions Functions allow you to modularise your code by defining reusable blocks of commands. Here's how you define and use a function in Bash.\nFirst we define the function greet() that will execute the commands inside its block when invoked. Inside the function, there's only one command: echo \u0026quot;Hello, $1!\u0026quot;. This line prints a message where $1 represents the first argument passed to the function. We then call the function with greet \u0026quot;Alice\u0026quot; which will execute the echo command inside the greet() function with the string \u0026quot;Alice\u0026quot; as its argument. The output of running this script would be: Hello, Alice!.\n1#!/usr/bin/env bash 2 3# Define a function 4greet() { 5 echo \u0026#34;Hello, $1!\u0026#34; 6} 7 8# Call the function 9greet \u0026#34;Alice\u0026#34; Conclusion This article has covered the basics of Bash scripting, including writing simple scripts, using variables, conditional statements, loops, and functions. With these fundamentals, you can start automating tasks and writing more complex scripts to enhance your productivity on the command line. Explore further documentation and tutorials to deepen your understanding of Bash programming.\n","link":"https://docs.entroware.com/posts/bash-basics/","section":"posts","tags":["Bash","Programming","Scripting","Linux","Shell"],"title":"Bash Programming Basics"},{"body":"","link":"https://docs.entroware.com/tags/cheat-sheet/","section":"tags","tags":null,"title":"Cheat Sheet"},{"body":"","link":"https://docs.entroware.com/tags/cli/","section":"tags","tags":null,"title":"CLI"},{"body":"","link":"https://docs.entroware.com/tags/command-line/","section":"tags","tags":null,"title":"Command Line"},{"body":"","link":"https://docs.entroware.com/tags/configuration/","section":"tags","tags":null,"title":"Configuration"},{"body":"Introduction to Network Configuration on Ubuntu Server Configuring network settings for a server is essential for successful operation. This article covers basic network configuration using Netplan and troubleshooting steps to resolve common networking issues.\nBasic Network Configuration 1. Checking your interface information Use the following command to check the status of available network interfaces:\n1user@machine:~$ ip addr In our example output it shows two network interfaces, the system loopback lo and our enp0s3 interface.\n11: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 2 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 3 inet 127.0.0.1/8 scope host lo 4 valid_lft forever preferred_lft forever 5 inet6 ::1/128 scope host noprefixroute 6 valid_lft forever preferred_lft forever 72: enp0s3: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc mq state UP group default qlen 1000 8 link/ether 00:1b:21:00:00:00 brd ff:ff:ff:ff:ff:ff 9 inet 192.168.1.10/24 brd 192.168.1.255 scope global dynamic noprefixroute enp0s3 10 valid_lft 6077sec preferred_lft 6077sec 11 inet6 fe80::1c68:8197:5a52:f1b2/64 scope link noprefixroute 12 valid_lft forever preferred_lft forever 2. Finding your Netplan Configuration Your Netplan configuration will be located in the /etc/netplan/ directory. The filename may differ, however this can be checked using the following command:\n1user@machine:~$ ls /etc/netplan/ When you have found it, open it in your favourite text editor but remember to use sudo as this file will need root privileges.\n1user@machine:~$ sudo nano /etc/netplan/01-netcfg.yaml 3. Examples of a Netplan Configuration Here is an example that configures DHCP for IPv4 on the enp0s3 network interface.\n1network: 2 version: 2 3 renderer: networkd 4 ethernets: 5 enp0s3: 6 dhcp4: true Here is an example that configures a static IPv4 address, subnet, default route, and two DNS servers on the enp0s3 network interface.\n1network: 2 version: 2 3 renderer: networkd 4 ethernets: 5 enp0s3: 6 dhcp4: false 7 addresses: 8 - 192.168.1.100/24 9 routes: 10 - to: default 11 via: 192.168.1.1 12 nameservers: 13 addresses: 14 - 8.8.8.8 15 - 8.8.4.4 4. Apply the changes To apply the changes without rebooting just run the following:\n1user@machine:~$ sudo netplan apply If the configuration does not work as intended you can get more information with the following:\n1user@machine:~$ sudo netplan --debug apply Troubleshooting Networking Issues 1. Checking Network Connectivity To verify network connectivity you can use the ping command. If the following is successful, it indicates that your system is able to connect out:\n1user@machine:~$ ping 8.8.8.8 However if the next command is successful, it indicates that your system is able to connect out as well as being able to resolve DNS queries.\n1user@machine:~$ ping google.com Conclusion Configuring network settings in Ubuntu Server is essential for connectivity and accessing resources on a network. By following these basic configuration steps and troubleshooting techniques outlined in this article, you can effectively set up and troubleshoot basic network connections on your Ubuntu Server system.\n","link":"https://docs.entroware.com/posts/ubuntu-server-network-configuration/","section":"posts","tags":["Ubuntu Server","Linux","Networking","Configuration","Troubleshooting"],"title":"Configuring Network Settings in Ubuntu Server: Basics and Troubleshooting"},{"body":"","link":"https://docs.entroware.com/tags/console/","section":"tags","tags":null,"title":"Console"},{"body":"","link":"https://docs.entroware.com/tags/cron/","section":"tags","tags":null,"title":"Cron"},{"body":"","link":"https://docs.entroware.com/tags/deb/","section":"tags","tags":null,"title":"Deb"},{"body":"","link":"https://docs.entroware.com/tags/dpkg/","section":"tags","tags":null,"title":"Dpkg"},{"body":"","link":"https://docs.entroware.com/tags/encryption/","section":"tags","tags":null,"title":"Encryption"},{"body":"","link":"https://docs.entroware.com/tags/fhs/","section":"tags","tags":null,"title":"FHS"},{"body":"","link":"https://docs.entroware.com/tags/file-permissions/","section":"tags","tags":null,"title":"File Permissions"},{"body":"","link":"https://docs.entroware.com/tags/filesystem/","section":"tags","tags":null,"title":"Filesystem"},{"body":"","link":"https://docs.entroware.com/tags/group-management/","section":"tags","tags":null,"title":"Group Management"},{"body":"","link":"https://docs.entroware.com/tags/hierarchy/","section":"tags","tags":null,"title":"Hierarchy"},{"body":"","link":"https://docs.entroware.com/tags/lemp/","section":"tags","tags":null,"title":"LEMP"},{"body":"Introduction The Linux command line is the most powerful way to interface with your system, providing you with options and flexibility that may not be available in a GUI. Becoming proficient with the CLI (Command Line Interface) will enable you to do more with your computer. This cheat sheet is designed to provide a reference for users who are new to the command line and if you would like to learn more about a particular command and its usage, users are encouraged to utilise the man command to review the command's manual page e.g. man ls and q to exit.\nFile Management Command Description ls List files and directories. pwd Print the current working directory. cd Change directory. mkdir Create a new directory. touch Create a new file. cp Copy files and directories. mv Move or rename files and directories. rm Remove files and directories. cat Display the contents of a file. less View the contents of a file interactively. head Display the beginning of a file. tail Display the end of a file. Navigation Command Description . Represents the current directory. .. Represents the parent directory. - Represents the previous directory. ~ Represents the user's home directory. Example Description cd .. Change to parent directory. ls ~ List files and directories in the home directory. System Information Command Description uname Display system information. hostname Display the system's hostname. whoami Display the current user. date Display the current date and time. uptime Display system uptime. Process Management Command Description ps Display information about running processes. top Display dynamic real-time information about running processes. kill Terminate a process by PID. killall Terminate all processes by name. Package Management Command Description apt \u0026amp; apt-get Package management utility for Ubuntu/Debian-based systems. yum Package management utility for Red Hat-based systems. dnf Package management utility for Fedora-based systems. snap Package management utility for multiple Linux systems. flatpak Package management utility for multiple Linux systems. Network Command Description ping Send ICMP echo requests to a network host. ip Display and configure network interfaces. ss Display network connections. wget \u0026amp; curl Retrieve files from the internet. File Permissions Command Description chmod Change file permissions. chown Change file owner and group. chgrp Change group ownership of files. Text Processing Command Description grep Search for patterns in files. sed Used for filtering and transforming text. awk Pattern scanning and processing tool. Compression and Archiving Command Description tar Create, manipulate, or extract tar archives. gzip Compress or decompress files using gzip compression. zip Compress or decompress files using zip compression. Miscellaneous Command Description echo Print text to the terminal. clear Clear the terminal screen. history Display command history. man Display the manual page for a command. sudo Execute a command as a superuser (root). Conclusion This cheat sheet provides a quick reference for commonly used Linux command line commands. Keep it handy for quick access to essential commands for file management, navigation, system administration, and more. Experiment with these commands in a Linux terminal to enhance your proficiency and productivity on the command line.\n","link":"https://docs.entroware.com/posts/linux-cli-cheat-sheet/","section":"posts","tags":["Linux","Command Line","CLI","Cheat Sheet"],"title":"Linux Command Line Cheat Sheet"},{"body":"","link":"https://docs.entroware.com/tags/luks/","section":"tags","tags":null,"title":"LUKS"},{"body":"Introduction to Systemd Timers Systemd timers, integral to the systemd init system in Linux, serve as a replacement to cron for task scheduling. Offering enhanced functionality and flexibility, systemd timers allow users to schedule tasks to run periodically or at specific intervals, catering to diverse system automation needs.\nUnderstanding Systemd Service and Timer Syntax Systemd timer units consist of two primary components:\nTimer Unit: Dictates the schedule and frequency of task execution. Service Unit: Specifies the task to be executed. Timer Unit Syntax The timer unit syntax allows you to define the timing and persistence of task execution. Let's delve into some examples.\nIn this example:\nUnit specifies the systemd service that will be run when the timer is activated, in this case example.service. OnCalendar dictates when the task should execute, set here to run every hour in the following syntax DayOfWeek Year-Month-Day Hour:Minute:Second, 1h would also be a valid value. 1[Unit] 2Description=Run task every hour 3 4[Timer] 5OnCalendar=* *-*-* *:00:00 6Unit=example.service 7 8[Install] 9WantedBy=timers.target In this example:\nOnCalendar is set to weekly which will run every Monday at 12am. Persistent=true ensures task execution even if it's missed due to the system being off. 1[Unit] 2Description=Run task every week 3 4[Timer] 5OnCalendar=weekly 6Persistent=true 7Unit=example.service 8 9[Install] 10WantedBy=timers.target Service Unit Syntax The service unit delineates the specific task to be executed. Here's a service unit example:\n1[Unit] 2Description=Task to be executed 3 4[Service] 5Type=oneshot 6ExecStart=/path/to/script.sh Creating and Managing Systemd Timers 1. Crafting Timer and Service Units Initiate the creation of timer and service units using a text editor such as nano:\n1user@machine:~$ sudo nano /etc/systemd/system/my-task.timer 2user@machine:~$ sudo nano /etc/systemd/system/my-task.service 2. Load and Enable Timer and Service Units 1user@machine:~$ sudo systemctl daemon-reload 2user@machine:~$ sudo systemctl start my-task.timer 3user@machine:~$ sudo systemctl enable my-task.timer Troubleshooting Systemd Timers 1. Verify Syntax 1user@machine:~$ systemd-analyze verify /etc/systemd/system/my-task.* 2. View Timer Status 1user@machine:~$ sudo systemctl status my-task.timer 3. Reviewing Timer Logs Examine logs pertinent to systemd timers via the journalctl command:\n1user@machine:~$ journalctl -u my-task.timer 4. Validating Executable Path Ensure the accuracy of the executable path specified in the service unit and confirm that the file's executable permissions are correct.\nConclusion Systemd timers serve as an indispensable tool for scheduling and automating tasks within Linux environments. By grasping the systemd timer and service syntax, and effectively troubleshooting common issues, users can harness the full potential of systemd timers to optimise task scheduling and streamline system administration processes on their Linux systems.\n","link":"https://docs.entroware.com/posts/linux-systemd-timers/","section":"posts","tags":["Linux","Systemd","Timers","Task Scheduling"],"title":"Managing Scheduled Tasks with Systemd Timers in Linux"},{"body":"Introduction to User and Group Management User and group management is a fundamental aspect of Linux system administration, enabling administrators to control access to resources and maintain system security. This guide explores various techniques for managing users and groups effectively.\nUser Management 1. Creating Users To create a new user, use the useradd command followed by the desired username, in this case we create the user john:\n1user@machine:~$ sudo useradd john 2. Modifying User Properties To modify the properties of the user john such as the user's full name or shell, the usermod command is used:\n1user@machine:~$ sudo usermod -c \u0026#34;John Smith\u0026#34; -s /bin/bash john 3. Deleting Users To delete a user account, use the userdel command:\n1user@machine:~$ sudo userdel john Group Management 1. Creating Groups To create a new group, use the groupadd command followed by the group name:\n1user@machine:~$ sudo groupadd groupname 2. Modifying Group Properties To modify group properties, such as the group's name groupmod is used:\n1user@machine:~$ sudo groupmod -n newgroupname groupname 3. Deleting Groups To delete a group, use the groupdel command:\n1user@machine:~$ sudo groupdel groupname 4. Assigning Users to Groups To assign a user to a group, use the usermod command with the -aG option:\n1user@machine:~$ sudo usermod -aG groupname username 5. Viewing User Groups With the groups command you can view the groups a user belongs to:\n1user@machine:~$ groups username Conclusion Effective user and group management is crucial for maintaining system security and resource access control in Linux environments. By leveraging the commands and techniques outlined in this guide, system administrators can efficiently create, modify, and delete user accounts and groups, ensuring permissions are effectively managed to safeguard sensitive data and system resources.\n","link":"https://docs.entroware.com/posts/linux-user-group-management/","section":"posts","tags":["Linux","User Management","Group Management","System Administration"],"title":"Managing Users and Groups in Linux"},{"body":"","link":"https://docs.entroware.com/tags/mysql/","section":"tags","tags":null,"title":"MySQL"},{"body":"","link":"https://docs.entroware.com/tags/networking/","section":"tags","tags":null,"title":"Networking"},{"body":"","link":"https://docs.entroware.com/tags/nginx/","section":"tags","tags":null,"title":"Nginx"},{"body":"","link":"https://docs.entroware.com/tags/numeric-representation/","section":"tags","tags":null,"title":"Numeric Representation"},{"body":"","link":"https://docs.entroware.com/tags/package-management/","section":"tags","tags":null,"title":"Package Management"},{"body":"","link":"https://docs.entroware.com/tags/php/","section":"tags","tags":null,"title":"PHP"},{"body":"","link":"https://docs.entroware.com/tags/programming/","section":"tags","tags":null,"title":"Programming"},{"body":"","link":"https://docs.entroware.com/tags/scripting/","section":"tags","tags":null,"title":"Scripting"},{"body":"","link":"https://docs.entroware.com/tags/security/","section":"tags","tags":null,"title":"Security"},{"body":"Introduction to LEMP Stack LEMP is a popular web development stack that consists of the following components:\nLinux: The operating system. Nginx: The web server. MySQL: The database management system. PHP: The server-side scripting language. This guide focuses on setting up a LEMP stack on Ubuntu.\n1. Installing Nginx Nginx is a high-performance web server that will serve as the backbone of our LEMP stack. Install Nginx using the following command:\n1user@machine:~$ sudo apt install nginx After installation, ensure that the Nginx service is started and enabled so it will start on boot:\n1user@machine:~$ sudo systemctl start nginx 2user@machine:~$ sudo systemctl enable nginx Create directory to store site files, in this case for example.com:\n1user@machine:~$ sudo mkdir /var/www/example.com 2. Installing MySQL MySQL is a powerful relational database management system. Install MySQL server using the following command:\n1user@machine:~$ sudo apt install mysql-server Once installed, run the MySQL security script to secure your installation. Follow the prompts to set a root password and configure other security options:\n1user@machine:~$ sudo mysql_secure_installation After installation, ensure that mysql service is started and enabled:\n1user@machine:~$ sudo systemctl start mysql 2user@machine:~$ sudo systemctl enable mysql 3. Installing PHP PHP is a popular server-side scripting language used for dynamic web content. Install PHP along with necessary extensions:\n1user@machine:~$ sudo apt install php-fpm php-mysql 4. Configuring Nginx to Use PHP Next, configure Nginx to process PHP files. Create a new server block configuration file for your website:\n1user@machine:~$ sudo nano /etc/nginx/sites-available/example.com Replace example.com with your domain name. Paste the following configuration into the file:\n1server { 2 listen 80; 3 server_name example.com www.example.com; 4 root /var/www/example.com; 5 index index.php index.html index.htm; 6 7 location / { 8 try_files $uri $uri/ =404; 9 } 10 11 location ~ \\.php$ { 12 include snippets/fastcgi-php.conf; 13 fastcgi_pass unix:/var/run/php/php-fpm.sock; 14 } 15 16 location ~ /\\.ht { 17 deny all; 18 } 19} Save and close the file. Then, create a symbolic link to enable the new site configuration and unlink the default site to disable it:\n1user@machine:~$ sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/ 2user@machine:~$ sudo unlink /etc/nginx/sites-enabled/default 5. Create an Example Index Create an index.php which will display your PHP details. This is useful as it will give nginx something to load as well as making sure that PHP is being processed:\n1user@machine:~$ sudo nano /var/www/example.com/index.php 1\u0026lt;?php 2phpinfo(); 3?\u0026gt; 6. Testing Configuration and Restarting Nginx Test the Nginx configuration for syntax errors:\n1user@machine:~$ sudo nginx -t If no errors are reported, restart Nginx to apply the changes:\n1user@machine:~$ sudo systemctl restart nginx Depending on your setup you should now be able to access http://example.com, http://127.0.0.1, or http://server_ip_address in your web browser. If everything worked correctly you should see the PHP information page.\nConclusion You have successfully set up a LEMP stack on your Ubuntu server. You can now deploy and host your web applications using Nginx, MySQL, and PHP, taking advantage of the robust and efficient LEMP stack for web development.\n","link":"https://docs.entroware.com/posts/ubuntu-lemp-stack-setup/","section":"posts","tags":["Ubuntu","LEMP","Nginx","MySQL","PHP","Web Hosting"],"title":"Setting Up a LEMP Stack on Ubuntu"},{"body":"Introduction to LUKS Encryption LUKS (Linux Unified Key Setup) is a disk encryption specification that provides a standard format for encrypting partitions on Linux. By encrypting your data with LUKS, you can ensure that it remains secure, even if your device is lost or stolen.\n1. Install Required Packages Before setting up LUKS encryption, ensure that the required packages are installed:\n1user@machine:~$ sudo apt install cryptsetup 2. Partitioning the Disk If you haven't already done so, create the partition that you want to encrypt using a tool like Disks or a command line tool such as fdisk or parted.\nPlease note that this cannot be performed on your running Ubuntu storage device, only an additional storage device. If disk encryption is required on the same disk as the running operating system, this would require Ubuntu to be reinstalled and disk encryption selected during installation.\n3. Setting Up LUKS Encryption Once the partition is created, you can set up LUKS encryption on it. Replace /dev/nvme1n1p1 with your partition:\n1user@machine:~$ sudo cryptsetup luksFormat /dev/nvme1n1p1 You will be prompted to enter a passphrase. This passphrase will be used to unlock the encrypted partition.\n4. Opening the Encrypted Partition After formatting the partition with LUKS, open it using the following command:\n1user@machine:~$ sudo cryptsetup luksOpen /dev/nvme1n1p1 my-encrypted-partition Replace /dev/nvme1n1p1 with the path to your encrypted partition and my-encrypted-partition with a name of your choice.\n5. Creating a File System Once the encrypted partition is opened, you can create a file system on it. For example, to create an ext4 file system:\n1user@machine:~$ sudo mkfs.ext4 /dev/mapper/my-encrypted-partition 6. Mounting the Encrypted Partition Create a mount point for the encrypted partition and mount it:\n1user@machine:~$ sudo mkdir /mnt/my-encrypted-partition 2user@machine:~$ sudo mount /dev/mapper/my-encrypted-partition /mnt/my-encrypted-partition 7. Testing To verify that the encrypted partition is working correctly, create a test file on it:\n1user@machine:~$ sudo touch /mnt/my-encrypted-partition/test-file If you can create and access files on the encrypted partition without any issues, then the setup is successful.\nConclusion You have successfully set up a LUKS encrypted partition on your Ubuntu system. Your data on the encrypted partition is now protected with strong encryption, providing an additional layer of security against unauthorised access. Make sure to safely store your encryption passphrase in a secure location, as it will be required to unlock the encrypted partition whenever you need to access it.\n","link":"https://docs.entroware.com/posts/ubuntu-luks-encryption-setup/","section":"posts","tags":["Ubuntu","LUKS","Encryption","Security"],"title":"Setting Up LUKS Encryption on Ubuntu"},{"body":"Introduction to SSH and SSH Keys SSH (Secure Shell) is a cryptographic network protocol that provides secure access to a remote system. SSH keys offer a more secure way to authenticate compared to traditional password authentication.\nSSH Client Here we will show you how to setup an OpenSSH client which will allow you to connect to an existing server with SSH enabled.\n1. Install OpenSSH Client The OpenSSH client package provides the necessary tools for connecting to SSH servers. Install it using the following command:\n1user@machine:~$ sudo apt install openssh-client 2. Generate SSH Key Pair You can now generate an SSH key pair using the ssh-keygen command. The following command will create a public/private key pair with a comment that includes your username, hostname, and current date:\n1user@machine:~$ ssh-keygen -C \u0026#34;$(whoami)@$(hostname) $(date -I)\u0026#34; Follow the prompts to specify a location to store the generated keys, by default this would be ~/.ssh/. It will also ask you to optionally set a passphrase for added security, this is something that we would recommend. This password is used to protect the private key you just generated and would be used to unlock the private key when you want to use it, this password would never be sent to a SSH server.\n3. Copy Public Key to Server Now that the SSH key pair is generated, copy the public key to your Ubuntu server using the ssh-copy-id command:\n1user@machine:~$ ssh-copy-id user@server Replace user with your server username and server with the IP address or hostname of your SSH server. You will be prompted to enter your server password for authentication, however once it completes you will then be able to use the newly generated keys instead for authentication.\n4. Test SSH Key Authentication You can now test SSH key authentication by attempting to SSH into your server:\n1user@machine:~$ ssh user@server If SSH key authentication is configured correctly.\nSSH Server Here we will show you how to setup an OpenSSH server, this would be used if you plan on setting up a system that you want to be able to connect to via SSH.\n1. Install OpenSSH Server The OpenSSH server package provides the necessary components for SSH server functionality. Install it using the following command:\n1user@server:~$ sudo apt install openssh-server 2. Configure SSH on Server Ensure that SSH key authentication is enabled in the SSH server configuration file /etc/ssh/sshd_config and verify that the following options are set:\nPubkeyAuthentication: Should be set to yes to enable public key authentication. PasswordAuthentication: It's recommended to set this to no to disable password authentication and enforce key-based authentication. Finally restart the SSH service after making these changes to the configuration file:\n1user@server:~$ sudo systemctl restart ssh Conclusion You have successfully set up SSH and configured SSH keys for secure authentication on your Ubuntu server. SSH keys offer a secure and convenient way to authenticate without needing to enter passwords, enhancing security and convenience for remote access. Make sure to keep your private SSH key secure and never share it with unauthorised individuals.\n","link":"https://docs.entroware.com/posts/ubuntu-ssh-keys-setup/","section":"posts","tags":["Ubuntu","SSH","SSH Keys","Authentication","Security"],"title":"Setting Up SSH and Using SSH Keys on Ubuntu"},{"body":"","link":"https://docs.entroware.com/tags/shell/","section":"tags","tags":null,"title":"Shell"},{"body":"","link":"https://docs.entroware.com/tags/snap/","section":"tags","tags":null,"title":"Snap"},{"body":"","link":"https://docs.entroware.com/tags/ssh/","section":"tags","tags":null,"title":"SSH"},{"body":"","link":"https://docs.entroware.com/tags/ssh-keys/","section":"tags","tags":null,"title":"SSH Keys"},{"body":"","link":"https://docs.entroware.com/tags/system-administration/","section":"tags","tags":null,"title":"System Administration"},{"body":"","link":"https://docs.entroware.com/tags/systemd/","section":"tags","tags":null,"title":"Systemd"},{"body":"","link":"https://docs.entroware.com/tags/task-scheduling/","section":"tags","tags":null,"title":"Task Scheduling"},{"body":"","link":"https://docs.entroware.com/tags/terminal/","section":"tags","tags":null,"title":"Terminal"},{"body":"Getting Started with the Linux Command Line The Linux command line interface (CLI), also known as the terminal, console, or shell, provides a powerful and efficient way to interact with a Linux system. Whether you're a beginner or an experienced user, mastering the command line is essential for performing various tasks efficiently.\nAccessing the Command Line To access the command line on a Linux system, open the terminal application. You can find it in the applications menu or use the keyboard shortcut Ctrl + Alt + T. Once the terminal is open, you're ready to start typing commands. Your command prompt will usually be denoted with the $ symbol.\nBasic Commands Here are some fundamental commands to get you started:\npwd: Print the current working directory. ls: List files and directories in the current directory. cd: Change the current directory. mkdir: Create a new directory. touch: Create a new file. cp: Copy files and directories. mv: Move or rename files and directories. rm: Remove files and directories. cat: Display the contents of a file. echo: Print text to the terminal. Navigating the File System Understanding how to navigate the file system is crucial.\n. : Represents the current directory. .. : Represents the parent directory. - : Represents the previous directory. ~ : Represents the user's home directory. Example Commands List files in long format: 1user@machine:~$ ls -l Create a directory: 1user@machine:~$ mkdir my_directory Change into a directory: 1user@machine:~$ cd my_directory Create a file: 1user@machine:~$ touch my_file.txt Copy a file: 1user@machine:~$ mv file1.txt /path/to/new/location/ Move a file: 1user@machine:~$ cp file1.txt file2.txt Remove a file: 1user@machine:~$ rm my_file.txt Conclusion This article has provided a beginner-friendly introduction to the Linux command line interface, covering basic commands for file system navigation and manipulation. As you continue to explore the command line, you'll discover more commands and advanced techniques that will enhance your productivity and efficiency in managing Linux systems. Practice regularly and refer to online resources for further learning and mastery of the command line.\n","link":"https://docs.entroware.com/posts/beginner-linux-command-line/","section":"posts","tags":["Linux","Command Line","CLI","Terminal","Console"],"title":"The Linux Command Line For Beginners"},{"body":"","link":"https://docs.entroware.com/tags/timers/","section":"tags","tags":null,"title":"Timers"},{"body":"Introduction to Package Management in Ubuntu Ubuntu uses both apt and snap predominantly for managing software packages. Apt provides an interface for installing, upgrading, and removing packages, as well as handling dependencies.\nUsing APT for Package Management 1. Updating Package Lists Before installing or upgrading packages, update your local package lists to ensure you have the latest information about available packages:\n1user@machine:~$ sudo apt update 2. Installing Packages To install a package, use the install subcommand followed by the package name:\n1user@machine:~$ sudo apt install package-name 3. Upgrading Packages To upgrade installed packages to their latest versions, use the upgrade subcommand:\n1user@machine:~$ sudo apt upgrade 4. Removing Packages To remove a package, use the remove subcommand followed by the package name:\n1user@machine:~$ sudo apt remove package-name Using SNAP for Package Management 1. Installing Snap Packages To install a package, use the install subcommand followed by the package name:\n1user@machine:~$ sudo snap install package-name 2. Upgrading Snap Packages To upgrade installed snap packages to their latest versions, use the refresh subcommand:\n1user@machine:~$ sudo snap refresh 3. Removing Snap Packages To remove a package, use the remove subcommand followed by the package name:\n1user@machine:~$ sudo snap remove package-name Managing Additional Software Apt repositories contain collections of software packages that apt can install or upgrade. Ubuntu's official repositories contain thousands of packages, but sometimes you may need to manage individual .deb packages. The dpkg tool provides functionality for installing, querying, and removing these packages.\nInstalling a .deb Package To install a .deb package, use the dpkg command followed by the path to the package file:\n1user@machine:~$ sudo dpkg -i package.deb Alternativley you can use apt to install it with:\n1user@machine:~$ sudo apt install ./package.deb Querying Package Information You can query information about installed packages using dpkg. For example, to check if a package is installed:\n1user@machine:~$ dpkg -l package-name Conclusion Package management is an essential aspect of maintaining an Ubuntu system. By mastering apt, snap, and dpkg commands, you can efficiently install, upgrade, and remove software packages, ensuring your system remains up-to-date and secure.\n","link":"https://docs.entroware.com/posts/ubuntu-package-management/","section":"posts","tags":["Ubuntu","Package Management","apt","snap","dpkg","deb"],"title":"Ubuntu Package Management"},{"body":"","link":"https://docs.entroware.com/tags/ubuntu-server/","section":"tags","tags":null,"title":"Ubuntu Server"},{"body":"Introduction to Linux File Permissions Linux file permissions regulate access to files and directories, ensuring security and control over who can read, write, or execute them. Understanding both symbolic and numeric representation of permissions is essential for managing files effectively.\nSymbolic Representation In symbolic representation, permissions are represented by three characters: r (read), w (write), and x (execute).\nrwx indicates read, write, and execute permissions. rw- indicates read and write permissions, but no execute permission. r-- indicates read-only permission. It's important to note that a directory requires the execute x permission to be able to access it.\nNumeric Representation Numeric representation simplifies permissions by assigning a numeric value to each permission:\nPermission Numeric Value Read (r) 4 Write (w) 2 Execute (x) 1 To calculate the numeric representation for a set of permissions, add up the values for each permission type. For example:\nRead and write: 4 (read) + 2 (write) = 6 Read, write, and execute: 4 (read) + 2 (write) + 1 (execute) = 7 User, Group, and Others Permissions Each file or directory has three sets of permission numbers corresponding to user, group, and others.\nFor example setting the following would equate to a 775 or rwxr-xr-x for the files full permissions.\nUser Permissions: 7 represents read, write, and execute (rwx). Group Permissions: 5 represents read and execute (r-x). Other Permissions: 5 represents read and execute (r-x). Command Examples Let's see some examples:\nThis command sets myfile.txt to 7 (user) 5 (group) 5 (others) or rwxr-xr-x:\n1user@machine:~$ chmod 755 myfile.txt This command sets myfile.txt to 6 (user) 4 (group) 4 (others) or rw-r--r--:\n1user@machine:~$ chmod 644 myfile.txt Conclusion Understanding both symbolic and numeric representations of Linux file permissions is crucial for effective file management. By mastering these concepts, users can accurately set permissions to control access to files and directories, ensuring security and privacy on Linux systems.\n","link":"https://docs.entroware.com/posts/linux-file-permissions/","section":"posts","tags":["Linux","File Permissions","Numeric Representation"],"title":"Understanding Linux File Permissions and Numeric Representation"},{"body":"Introduction to the Linux Filesystem Hierarchy The Linux Filesystem Hierarchy Standard (FHS) defines the structure and organisation of directories in Linux systems. Understanding the filesystem hierarchy is essential for efficient navigation, administration, and management of Linux systems.\nRoot Directory (/) The root directory is the top-level directory in the filesystem hierarchy. It is represented by a single forward slash (/) and serves as the starting point for all other directories. In Linux, everything is organized under the root directory.\nImportant Directories Here are some key directories defined by the FHS and their purposes:\n/bin: Contains essential binary executables (commands) required for system boot and operation, accessible to all users. /boot: Contains boot loader files, kernel images, and other files required for system booting. /dev: Contains device files representing hardware devices and system peripherals. /etc: Contains system-wide configuration files and directories. /home: Home directories for regular users are located here. /lib and /lib64: Essential Libraries for other installed binaries. /media: Mount point for removable media such as USB drives and optical discs. /mnt: Temporary mount point for filesystems. /opt: Contains optional software packages installed by user. /proc: A virtual filesystem that provides information about processes and system resources. /root: Home directory for the root user. /sbin: Contains system binaries (commands) used for system administration tasks. /srv: Contains data for services provided by the system. /sys: Contains information regarding components, drivers, and kernel features. /tmp: Directory for temporary files that will be deleted on system reboot. /usr: Contains user-related binaries, libraries, documentation, and more. /var: Contains variable data files, including logs, spool files, and temporary files. Conclusion Understanding the Linux Filesystem Hierarchy is crucial for effectively navigating, administering, and managing Linux systems. By familiarising yourself with the purpose of each directory, you can better organize your files, configure system settings, and troubleshoot issues when necessary. Refer to the Linux Filesystem Hierarchy Standard documentation for further details and guidelines.\n","link":"https://docs.entroware.com/posts/linux-filesystem-hierarchy/","section":"posts","tags":["Linux","Filesystem","Hierarchy","FHS"],"title":"Understanding the Linux Filesystem Hierarchy"},{"body":"","link":"https://docs.entroware.com/tags/user-management/","section":"tags","tags":null,"title":"User Management"},{"body":"This article is deprecated Most modern systems have deprecated cron. Please see Systemd timers.\nIntroduction to Cron Cron is a time-based job scheduler in Linux that allows users to schedule tasks to run periodically at fixed times, dates, or intervals. It's an essential tool for automating repetitive tasks such as system maintenance, backups, and script execution.\nBasic Cron Syntax Cron jobs are defined using these fields:\n1* * * * * command_to_execute 2- - - - - 3| | | | | 4| | | | +----- Day of the week (0 - 7) (Sunday is 0 or 7) 5| | | +------- Month (1 - 12) 6| | +--------- Day of the month (1 - 31) 7| +----------- Hour (0 - 23) 8+------------- Minute (0 - 59) Scheduling Tasks with Cron 1. Editing the Crontab To edit the current user's crontab, use the crontab -e command:\n1user@machine:~$ crontab -e This opens the crontab file in the default text editor specified by the EDITOR environment variable. You can dynamically set this so it opens in nano with the following command:\n1user@machine:~$ EDITOR=nano crontab -e 2. Adding a Cron Job To add a new cron job, append a line to the crontab file in the following format:\n1* * * * * command_to_execute Replace * * * * * with the desired schedule and command_to_execute with the command or script to be executed.\n3. Examples of Cron Entries Run a script every hour: 10 * * * * /path/to/script.sh Run a script every day at midnight: 10 0 * * * /path/to/script.sh Run a script every Monday at 3:30 AM: 130 3 * * 1 /path/to/script.sh Managing Cron Jobs 1. Listing Cron Jobs To view the list of cron jobs for the current user, use the crontab -l command:\n1user@machine:~$ crontab -l 2. Removing Cron Jobs To remove a cron job, use the crontab -e command and remove the entry.\nTo remove all cron jobs, use the crontab -r command:\n1user@machine:~$ crontab -r Troubleshooting Cron 1. Checking Cron Logs Cron logs are typically stored in the Systemd Journal, /var/log/syslog, or /var/log/cron. Check these logs for any errors or issues with cron jobs.\n2. Verifying Environment Variables Ensure that cron jobs specify full paths to commands and scripts, as cron jobs run with a limited environment compared to interactive shells. If a script is being execute, ensure that it has the execute permission set.\nConclusion Cron is a powerful tool for automating tasks in Linux. By understanding cron syntax and how to schedule, manage, and troubleshoot cron jobs, you can streamline system administration and improve productivity. Experiment with cron to automate routine tasks and simplify maintenance activities on your Linux system.\n","link":"https://docs.entroware.com/posts/linux-cron-scheduling-tasks/","section":"posts","tags":["Linux","Cron","Automation","Task Scheduling"],"title":"Using Cron in Linux: Scheduling Tasks (deprecated)"},{"body":"","link":"https://docs.entroware.com/tags/web-hosting/","section":"tags","tags":null,"title":"Web Hosting"},{"body":"Welcome to the Entroware documentation site, a valuable resource specifically tailored for Entroware customers. It's purpose is to provide users of Entroware products and the greater Linux community with an extensive collection of helpful guides and tutorials. We understand the importance of having easy access to reliable information when using your Laptops, Desktop, Workstations, and Servers which is why we have meticulously curated this site to offer a seamless user experience.\nWhether you are an experienced tech enthusiast or just starting your journey with Entroware systems, this documentation site has something for everyone. We cover a wide range of topics, from basic computer operations and troubleshooting tips to advanced configurations and software installations. Our goal is to empower you with the knowledge needed to get the most out of your devices.\nOur content is regularly updated by our team of experts who are well-versed in Entroware products, ensuring that the information provided remains relevant and up-to-date. We also encourage user feedback and suggestions for improvement, as we believe that collaboration between our customers, the community, and our staff leads to a more comprehensive resource for everyone involved.\nWe take pride in being an essential companion to Entroware customers on their computing journey. By utilizing this documentation site, we hope to foster a sense of confidence and independence when it comes to managing your devices. So go ahead, explore our resources, and discover the full potential of your Entroware computer today!\nLearn more with Entroware and contribute on GitHub.\n","link":"https://docs.entroware.com/about/","section":"","tags":null,"title":"About"},{"body":"Part 1 - Prerequisites Before you get started you will need to make sure that you have a USB storage drive that is at least 8GB in capacity. It is important to note that the USB storage drive will be erased during the creation process so we would highly recommend backing up any data you want to keep.\nPart 2 - Getting the ISO Head over to the Ubuntu download page and download the latest LTS (Long Term Support) release.\nThis will download an ISO disk image file with a filename similar to ubuntu-24.04-desktop-amd64.iso.\nPart 3 - Prepare the disk creator Open the Startup Disk Creator application that is comes with Ubuntu by default. You can then select your downloaded Ubuntu ISO from Part 2, and then select your USB drive.\nThe image below shows that in our example we selected an Ubuntu 22.04.4 ISO and we are about to use a Samsung Flash Drive. Part 4 - Image the USB drive You can now select Make Startup Disk and you will be prompted to confirm the erasure of the selected USB drive.\nOnce confirmed you will then be asked to enter your user account password and the creation process will begin. Part 5 - Sit back and wait After your password is accepted the Startup Disk Creator will write the content of the ISO file to your USB drive. This process make take a few minutes to complete and the speed will be dependant on how fast your USB drive is. Once completed you will now be able to boot from the USB device at system startup.\n","link":"https://docs.entroware.com/posts/create-ubuntu-usb/","section":"posts","tags":["Ubuntu","Install","USB"],"title":"Create an Ubuntu installation USB on Ubuntu"},{"body":"","link":"https://docs.entroware.com/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://docs.entroware.com/series/","section":"series","tags":null,"title":"Series"}]